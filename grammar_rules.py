import non_terminals as nonTerminals
import terminals as t

terminals = t.Terminals
nt = nonTerminals.NonTerminals

tablaC = [
    [nt.TRANSLATION_UNIT.value, terminals.IDENTIFIER.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.LEFT_PAREN.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.RIGHT_PAREN.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.GREATER_THAN.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.EQUALS.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.MUL_EQ.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.DIV_EQ.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.ADD_EQ.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.SUB_EQ.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.SEMICOLON.value, None],
    [nt.TRANSLATION_UNIT.value, 'void', nt.EXTERNAL_DECLARATION.value],
    [nt.TRANSLATION_UNIT.value, 'void', [nt.TRANSLATION_UNIT.value, nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.CHAR.value, [nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.CHAR.value, [nt.TRANSLATION_UNIT.value, nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.INT.value, [nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.FLOAT.value, [nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.FLOAT.value, [nt.TRANSLATION_UNIT.value, nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.LEFT_CURLY.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.RIGHT_CURLY.value, None],
    [nt.TRANSLATION_UNIT.value, 'struct', nt.EXTERNAL_DECLARATION.value],
    [nt.TRANSLATION_UNIT.value, 'struct', [nt.TRANSLATION_UNIT.value, nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.IF.value, [nt.EXTERNAL_DECLARATION.value]],
    [nt.TRANSLATION_UNIT.value, terminals.ELSE.value, None],
    [nt.TRANSLATION_UNIT.value, terminals.WHILE.value, None],
    [nt.TRANSLATION_UNIT.value, 'return', None],
    [nt.PRIMARY_EXPRESSION.value, terminals.IDENTIFIER.value, [terminals.IDENTIFIER.value]],
    [nt.PRIMARY_EXPRESSION.value, terminals.LEFT_PAREN.value, [terminals.LEFT_PAREN.value,nt.EXPRESSION.value, terminals.RIGHT_PAREN.value]],
    [nt.PRIMARY_EXPRESSION.value, terminals.RIGHT_PAREN.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.GREATER_THAN.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.EQUALS.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.MUL_EQ.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.DIV_EQ.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.ADD_EQ.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.SUB_EQ.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.SEMICOLON.value, None],
    [nt.PRIMARY_EXPRESSION.value, 'void', None],
    [nt.PRIMARY_EXPRESSION.value, terminals.CHAR.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.INT.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.FLOAT.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.LEFT_CURLY.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.RIGHT_CURLY.value, None],
    [nt.PRIMARY_EXPRESSION.value, 'struct', None],
    [nt.PRIMARY_EXPRESSION.value, terminals.IF.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.ELSE.value, None],
    [nt.PRIMARY_EXPRESSION.value, terminals.WHILE.value, None],
    [nt.PRIMARY_EXPRESSION.value, 'return', None],
    [nt.POSTFIX_EXPRESSION.value, terminals.IDENTIFIER.value, [nt.PRIMARY_EXPRESSION.value]],
    [nt.POSTFIX_EXPRESSION.value, terminals.IDENTIFIER.value, [nt.POSTFIX_EXPRESSION.value, terminals.LEFT_PAREN.value, nt.ARGUMENT_EXPRESSION_LIST.value, terminals.RIGHT_PAREN.value]],
    [nt.POSTFIX_EXPRESSION.value, terminals.LEFT_PAREN.value, [terminals.LEFT_PAREN.value, nt.EXPRESSION.value, terminals.RIGHT_PAREN.value]],
    [nt.POSTFIX_EXPRESSION.value, terminals.LEFT_PAREN.value, [nt.POSTFIX_EXPRESSION.value, terminals.LEFT_PAREN.value, nt.ARGUMENT_EXPRESSION_LIST.value, terminals.RIGHT_PAREN.value]],
    [nt.POSTFIX_EXPRESSION.value, terminals.RIGHT_PAREN.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.GREATER_THAN.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.EQUALS.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.MUL_EQ.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.DIV_EQ.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.ADD_EQ.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.SUB_EQ.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.SEMICOLON.value, None],
    [nt.POSTFIX_EXPRESSION.value, 'void', None],
    [nt.POSTFIX_EXPRESSION.value, terminals.CHAR.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.INT.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.FLOAT.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.LEFT_CURLY.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.RIGHT_CURLY.value, None],
    [nt.POSTFIX_EXPRESSION.value, 'struct', None],
    [nt.POSTFIX_EXPRESSION.value, terminals.IF.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.ELSE.value, None],
    [nt.POSTFIX_EXPRESSION.value, terminals.WHILE.value, None],
    [nt.POSTFIX_EXPRESSION.value, 'return', None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.IDENTIFIER.value, nt.ASSIGNMENT_EXPRESSION.value],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.IDENTIFIER.value, [nt.ARGUMENT_EXPRESSION_LIST.value, 'comma', nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.LEFT_PAREN.value, nt.ASSIGNMENT_EXPRESSION.value],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.LEFT_PAREN.value, [nt.ARGUMENT_EXPRESSION_LIST.value, 'comma', nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.EQUALS.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.MUL_EQ.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.DIV_EQ.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.ADD_EQ.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.SUB_EQ.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.SEMICOLON.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, 'void', None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.CHAR.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.INT.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.FLOAT.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, 'struct', None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.IF.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.ELSE.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, terminals.WHILE.value, None],
    [nt.ARGUMENT_EXPRESSION_LIST.value, 'return', None],
    [nt.UNARY_EXPRESSION.value, terminals.IDENTIFIER.value, [nt.POSTFIX_EXPRESSION.value]],
    [nt.UNARY_EXPRESSION.value, terminals.LEFT_PAREN.value, nt.POSTFIX_EXPRESSION.value],
    [nt.UNARY_EXPRESSION.value, terminals.RIGHT_PAREN.value, None],
    [nt.UNARY_EXPRESSION.value, 'comma', None],
    [nt.UNARY_EXPRESSION.value, terminals.GREATER_THAN.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.EQUALS.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.MUL_EQ.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.DIV_EQ.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.ADD_EQ.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.SUB_EQ.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.SEMICOLON.value, None],
    [nt.UNARY_EXPRESSION.value, 'void', None],
    [nt.UNARY_EXPRESSION.value, terminals.CHAR.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.INT.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.FLOAT.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.LEFT_CURLY.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.RIGHT_CURLY.value, None],
    [nt.UNARY_EXPRESSION.value, 'struct', None],
    [nt.UNARY_EXPRESSION.value, terminals.IF.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.ELSE.value, None],
    [nt.UNARY_EXPRESSION.value, terminals.WHILE.value, None],
    [nt.UNARY_EXPRESSION.value, 'return', None],
    [nt.UNARY_OPERATOR.value, terminals.IDENTIFIER.value, None],
    [nt.UNARY_OPERATOR.value, terminals.LEFT_PAREN.value, None],
    [nt.UNARY_OPERATOR.value, terminals.RIGHT_PAREN.value, None],
    [nt.UNARY_OPERATOR.value, terminals.GREATER_THAN.value, None],
    [nt.UNARY_OPERATOR.value, terminals.EQUALS.value, None],
    [nt.UNARY_OPERATOR.value, terminals.MUL_EQ.value, None],
    [nt.UNARY_OPERATOR.value, terminals.DIV_EQ.value, None],
    [nt.UNARY_OPERATOR.value, terminals.ADD_EQ.value, None],
    [nt.UNARY_OPERATOR.value, terminals.SUB_EQ.value, None],
    [nt.UNARY_OPERATOR.value, terminals.SEMICOLON.value, None],
    [nt.UNARY_OPERATOR.value, 'void', None],
    [nt.UNARY_OPERATOR.value, terminals.CHAR.value, None],
    [nt.UNARY_OPERATOR.value, terminals.INT.value, None],
    [nt.UNARY_OPERATOR.value, terminals.FLOAT.value, None],
    [nt.UNARY_OPERATOR.value, terminals.LEFT_CURLY.value, None],
    [nt.UNARY_OPERATOR.value, terminals.RIGHT_CURLY.value, None],
    [nt.UNARY_OPERATOR.value, 'struct', None],
    [nt.UNARY_OPERATOR.value, terminals.IF.value, None],
    [nt.UNARY_OPERATOR.value, terminals.ELSE.value, None],
    [nt.UNARY_OPERATOR.value, terminals.WHILE.value, None],
    [nt.UNARY_OPERATOR.value, 'return', None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.IDENTIFIER.value, [nt.UNARY_EXPRESSION.value, nt.ASSIGNMENT_OPERATOR.value, nt.UNARY_EXPRESSION.value]],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.IDENTIFIER.value, [nt.UNARY_EXPRESSION.value, nt.ASSIGNMENT_OPERATOR.value, nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.LEFT_PAREN.value, [nt.UNARY_EXPRESSION.value, nt.ASSIGNMENT_OPERATOR.value, nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.RIGHT_PAREN.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, 'comma', None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.GREATER_THAN.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.EQUALS.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.MUL_EQ.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.DIV_EQ.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.ADD_EQ.value, [terminals.ADD_EQ.value]],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.SUB_EQ.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.SEMICOLON.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, 'void', None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.CHAR.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.INT.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.FLOAT.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.LEFT_CURLY.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.RIGHT_CURLY.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, 'struct', None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.IF.value, ['number', terminals.GREATER_THAN.value, 'number']],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.ELSE.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, terminals.WHILE.value, None],
    [nt.ASSIGNMENT_EXPRESSION.value, 'return', None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.IDENTIFIER.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.LEFT_PAREN.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.RIGHT_PAREN.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.GREATER_THAN.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.EQUALS.value, [terminals.EQUALS.value,terminals.MUL_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.EQUALS.value, [terminals.EQUALS.value,terminals.DIV_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.EQUALS.value, [terminals.EQUALS.value,terminals.ADD_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.EQUALS.value, [terminals.EQUALS.value,terminals.SUB_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.MUL_EQ.value, [terminals.MUL_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.DIV_EQ.value, [terminals.DIV_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.ADD_EQ.value, [terminals.ADD_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.SUB_EQ.value, [terminals.SUB_EQ.value]],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.SEMICOLON.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, 'void', None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.CHAR.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.INT.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.FLOAT.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.LEFT_CURLY.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.RIGHT_CURLY.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, 'struct', None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.IF.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.ELSE.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, terminals.WHILE.value, None],
    [nt.ASSIGNMENT_OPERATOR.value, 'return', None],
    [nt.EXPRESSION.value, terminals.IDENTIFIER.value, [terminals.IDENTIFIER.value]],
    [nt.EXPRESSION.value, terminals.IDENTIFIER.value, [nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.EXPRESSION.value, terminals.IDENTIFIER.value, [nt.EXPRESSION.value, 'comma', nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.EXPRESSION.value, terminals.LEFT_PAREN.value, nt.ASSIGNMENT_EXPRESSION.value],
    [nt.EXPRESSION.value, terminals.LEFT_PAREN.value, [nt.EXPRESSION.value, 'comma', nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.EXPRESSION.value, terminals.RIGHT_PAREN.value, [terminals.IDENTIFIER.value]],
    [nt.EXPRESSION.value, terminals.GREATER_THAN.value, None],
    [nt.EXPRESSION.value, terminals.EQUALS.value, None],
    [nt.EXPRESSION.value, terminals.MUL_EQ.value, None],
    [nt.EXPRESSION.value, terminals.DIV_EQ.value, None],
    [nt.EXPRESSION.value, terminals.ADD_EQ.value, None],
    [nt.EXPRESSION.value, terminals.SUB_EQ.value, None],
    [nt.EXPRESSION.value, 'void', None],
    [nt.EXPRESSION.value, terminals.CHAR.value, None],
    [nt.EXPRESSION.value, terminals.INT.value, None],
    [nt.EXPRESSION.value, terminals.FLOAT.value, None],
    [nt.EXPRESSION.value, terminals.LEFT_CURLY.value, None],
    [nt.EXPRESSION.value, terminals.RIGHT_CURLY.value, None],
    [nt.EXPRESSION.value, 'struct', None],
    [nt.EXPRESSION.value, terminals.IF.value, None],
    [nt.EXPRESSION.value, terminals.ELSE.value, None],
    [nt.EXPRESSION.value, terminals.WHILE.value, None],
    [nt.EXPRESSION.value, 'return', None],
    [nt.DECLARATION.value, terminals.IDENTIFIER.value, None],
    [nt.DECLARATION.value, terminals.LEFT_PAREN.value, None],
    [nt.DECLARATION.value, terminals.RIGHT_PAREN.value, None],
    [nt.DECLARATION.value, terminals.GREATER_THAN.value, None],
    [nt.DECLARATION.value, terminals.EQUALS.value, None],
    [nt.DECLARATION.value, terminals.MUL_EQ.value, None],
    [nt.DECLARATION.value, terminals.DIV_EQ.value, None],
    [nt.DECLARATION.value, terminals.ADD_EQ.value, None],
    [nt.DECLARATION.value, terminals.SUB_EQ.value, None],
    [nt.DECLARATION.value, terminals.SEMICOLON.value, None],
    [nt.DECLARATION.value, 'void', [nt.DECLARATION_SPECIFIERS.value, terminals.SEMICOLON.value]],
    [nt.DECLARATION.value, 'void', [nt.DECLARATION_SPECIFIERS.value, nt.INIT_DECLARATOR_LIST.value, terminals.SEMICOLON.value]],
    #[nt.Declaration, terminals.CHAR.value, [nt.Declaration_specifiers, terminals.SEMICOLON.value]], #-------------------------------------------
    [nt.DECLARATION.value, terminals.CHAR.value, [nt.DECLARATION_SPECIFIERS.value, nt.INIT_DECLARATOR_LIST.value, terminals.SEMICOLON.value]],
    #[nt.Declaration, terminals.INT.value, [nt.Declaration_specifiers, terminals.SEMICOLON.value]], #--------------------------------------------
    [nt.DECLARATION.value, terminals.INT.value, [nt.DECLARATION_SPECIFIERS.value, nt.INIT_DECLARATOR_LIST.value, terminals.SEMICOLON.value]],
    #[nt.Declaration, terminals.FLOAT.value, [nt.Declaration_specifiers, terminals.SEMICOLON.value]], #------------------------------------------
    [nt.DECLARATION.value, terminals.FLOAT.value, [nt.DECLARATION_SPECIFIERS.value, nt.INIT_DECLARATOR_LIST.value, terminals.SEMICOLON.value]],
    [nt.DECLARATION.value, terminals.LEFT_CURLY.value, None],
    [nt.DECLARATION.value, terminals.RIGHT_CURLY.value, None],
    [nt.DECLARATION.value, 'struct', [nt.DECLARATION_SPECIFIERS.value, terminals.SEMICOLON.value]],
    #[nt.Declaration, 'struct', [nt.Declaration_specifiers, nt.Init_declarator_list, terminals.SEMICOLON.value]],
    [nt.DECLARATION.value, terminals.IF.value, None],
    [nt.DECLARATION.value, terminals.ELSE.value, None],
    [nt.DECLARATION.value, terminals.WHILE.value, None],
    [nt.DECLARATION.value, 'return', None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.IDENTIFIER.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.LEFT_PAREN.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.RIGHT_PAREN.value, None],
    [nt.DECLARATION_SPECIFIERS.value, 'comma', None],
    [nt.DECLARATION_SPECIFIERS.value, 'plus', None],
    [nt.DECLARATION_SPECIFIERS.value, 'minus', None],
    [nt.DECLARATION_SPECIFIERS.value, 'not', None],
    [nt.DECLARATION_SPECIFIERS.value, 'divide', None],
    [nt.DECLARATION_SPECIFIERS.value, 'lessthan', None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.GREATER_THAN.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.EQUALS.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.MUL_EQ.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.DIV_EQ.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.ADD_EQ.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.SUB_EQ.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.SEMICOLON.value, None],
    [nt.DECLARATION_SPECIFIERS.value, 'void', [nt.DECLARATION_SPECIFIERS.value, terminals.SEMICOLON.value]],
    [nt.DECLARATION_SPECIFIERS.value, terminals.CHAR.value, [nt.TYPE_SPECIFIER.value]],
    [nt.DECLARATION_SPECIFIERS.value, terminals.INT.value, [nt.TYPE_SPECIFIER.value]],
    [nt.DECLARATION_SPECIFIERS.value, terminals.FLOAT.value, [nt.TYPE_SPECIFIER.value]],
    [nt.DECLARATION_SPECIFIERS.value, terminals.LEFT_CURLY.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.RIGHT_CURLY.value, None],
    [nt.DECLARATION_SPECIFIERS.value, 'struct', [nt.TYPE_SPECIFIER.value]],
    [nt.DECLARATION_SPECIFIERS.value, terminals.IF.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.ELSE.value, None],
    [nt.DECLARATION_SPECIFIERS.value, terminals.WHILE.value, None],
    [nt.DECLARATION_SPECIFIERS.value, 'do', None],
    [nt.DECLARATION_SPECIFIERS.value, 'for', None],
    [nt.DECLARATION_SPECIFIERS.value, 'return', None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.IDENTIFIER.value, [nt.INIT_DECLARATOR.value]],
    [nt.INIT_DECLARATOR_LIST.value, terminals.LEFT_PAREN.value, nt.INIT_DECLARATOR.value],
    [nt.INIT_DECLARATOR_LIST.value, terminals.LEFT_PAREN.value, [nt.INIT_DECLARATOR_LIST.value, 'comma', nt.INIT_DECLARATOR.value]],
    [nt.INIT_DECLARATOR_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.INIT_DECLARATOR_LIST.value, 'comma', None],
    [nt.INIT_DECLARATOR_LIST.value, 'plus', None],
    [nt.INIT_DECLARATOR_LIST.value, 'minus', None],
    [nt.INIT_DECLARATOR_LIST.value, 'not', None],
    [nt.INIT_DECLARATOR_LIST.value, 'divide', None],
    [nt.INIT_DECLARATOR_LIST.value, 'lessthan', None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.EQUALS.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.MUL_EQ.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.DIV_EQ.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.ADD_EQ.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.SUB_EQ.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.SEMICOLON.value, None],
    [nt.INIT_DECLARATOR_LIST.value, 'void', None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.CHAR.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.INT.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.FLOAT.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.INIT_DECLARATOR_LIST.value, 'struct', None],
    [nt.INIT_DECLARATOR_LIST.value, 'enum', None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.IF.value, [nt.INIT_DECLARATOR.value]],
    [nt.INIT_DECLARATOR_LIST.value, terminals.ELSE.value, None],
    [nt.INIT_DECLARATOR_LIST.value, terminals.WHILE.value, None],
    [nt.INIT_DECLARATOR_LIST.value, 'do', None],
    [nt.INIT_DECLARATOR_LIST.value, 'for', None],
    [nt.INIT_DECLARATOR_LIST.value, 'return', None],
    #[nt.Init_declarator, terminals.IDENTIFIER.value, [nt.Declarator]],
    [nt.INIT_DECLARATOR.value, terminals.IDENTIFIER.value, [nt.DECLARATOR.value, terminals.EQUALS.value, 'number']],
    [nt.INIT_DECLARATOR.value, terminals.LEFT_PAREN.value, nt.DECLARATOR.value],
    [nt.INIT_DECLARATOR.value, terminals.LEFT_PAREN.value, [nt.DECLARATOR.value, terminals.EQUALS.value, nt.INITIALIZER.value]],
    [nt.INIT_DECLARATOR.value, terminals.RIGHT_PAREN.value, None],
    [nt.INIT_DECLARATOR.value, 'comma', None],
    [nt.INIT_DECLARATOR.value, 'plus', None],
    [nt.INIT_DECLARATOR.value, 'minus', None],
    [nt.INIT_DECLARATOR.value, 'not', None],
    [nt.INIT_DECLARATOR.value, 'divide', None],
    [nt.INIT_DECLARATOR.value, 'lessthan', None],
    [nt.INIT_DECLARATOR.value, terminals.GREATER_THAN.value, None],
    [nt.INIT_DECLARATOR.value, terminals.EQUALS.value, None],
    [nt.INIT_DECLARATOR.value, terminals.MUL_EQ.value, None],
    [nt.INIT_DECLARATOR.value, terminals.DIV_EQ.value, None],
    [nt.INIT_DECLARATOR.value, terminals.ADD_EQ.value, None],
    [nt.INIT_DECLARATOR.value, terminals.SUB_EQ.value, None],
    [nt.INIT_DECLARATOR.value, terminals.SEMICOLON.value, None],
    [nt.INIT_DECLARATOR.value, 'void', None],
    [nt.INIT_DECLARATOR.value, terminals.CHAR.value, None],
    [nt.INIT_DECLARATOR.value, terminals.INT.value, None],
    [nt.INIT_DECLARATOR.value, terminals.FLOAT.value, None],
    [nt.INIT_DECLARATOR.value, terminals.LEFT_CURLY.value, None],
    [nt.INIT_DECLARATOR.value, terminals.RIGHT_CURLY.value, None],
    [nt.INIT_DECLARATOR.value, 'struct', None],
    [nt.INIT_DECLARATOR.value, 'enum', None],
    [nt.INIT_DECLARATOR.value, terminals.IF.value, [nt.DECLARATOR.value]],
    [nt.INIT_DECLARATOR.value, terminals.ELSE.value, None],
    [nt.INIT_DECLARATOR.value, terminals.WHILE.value, None],
    [nt.INIT_DECLARATOR.value, 'do', None],
    [nt.INIT_DECLARATOR.value, 'for', None],
    [nt.INIT_DECLARATOR.value, 'return', None],
    [nt.TYPE_SPECIFIER.value, terminals.IDENTIFIER.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.LEFT_PAREN.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.RIGHT_PAREN.value, None],
    [nt.TYPE_SPECIFIER.value, 'comma', None],
    [nt.TYPE_SPECIFIER.value, 'plus', None],
    [nt.TYPE_SPECIFIER.value, 'minus', None],
    [nt.TYPE_SPECIFIER.value, 'not', None],
    [nt.TYPE_SPECIFIER.value, 'divide', None],
    [nt.TYPE_SPECIFIER.value, 'lessthan', None],
    [nt.TYPE_SPECIFIER.value, terminals.GREATER_THAN.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.EQUALS.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.MUL_EQ.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.DIV_EQ.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.ADD_EQ.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.SUB_EQ.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.SEMICOLON.value, None],
    [nt.TYPE_SPECIFIER.value, 'void', None],
    [nt.TYPE_SPECIFIER.value, terminals.CHAR.value, [terminals.CHAR.value]],
    [nt.TYPE_SPECIFIER.value, 'number', ['number']],
    [nt.TYPE_SPECIFIER.value, terminals.INT.value, [terminals.INT.value]],
    [nt.TYPE_SPECIFIER.value, terminals.FLOAT.value, [terminals.FLOAT.value]],
    [nt.TYPE_SPECIFIER.value, terminals.LEFT_CURLY.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.RIGHT_CURLY.value, None],
    [nt.TYPE_SPECIFIER.value, 'struct', [nt.STRUCT_OR_UNION_SPECIFIER.value]],
    [nt.TYPE_SPECIFIER.value, 'enum', None],
    [nt.TYPE_SPECIFIER.value, terminals.IF.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.ELSE.value, None],
    [nt.TYPE_SPECIFIER.value, terminals.WHILE.value, None],
    [nt.TYPE_SPECIFIER.value, 'do', None],
    [nt.TYPE_SPECIFIER.value, 'for', None],
    [nt.TYPE_SPECIFIER.value, 'return', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.IDENTIFIER.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.LEFT_PAREN.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.RIGHT_PAREN.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.GREATER_THAN.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.EQUALS.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.MUL_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.DIV_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.ADD_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.SUB_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.SEMICOLON.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'void', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.CHAR.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.INT.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.FLOAT.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.LEFT_CURLY.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.RIGHT_CURLY.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'struct', ['struct', terminals.IDENTIFIER.value, terminals.LEFT_CURLY.value, nt.STRUCT_DECLARATION_LIST.value, terminals.RIGHT_CURLY.value]],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'struct', [nt.STRUCT_OR_UNION.value, terminals.LEFT_CURLY.value, nt.STRUCT_DECLARATION_LIST.value, terminals.RIGHT_CURLY.value]],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'struct', [nt.STRUCT_OR_UNION.value, terminals.IDENTIFIER.value]],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.IF.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.ELSE.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.WHILE.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'do', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'for', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'return', None],
    [nt.STRUCT_OR_UNION.value, terminals.IDENTIFIER.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.LEFT_PAREN.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.RIGHT_PAREN.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.GREATER_THAN.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.EQUALS.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.MUL_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.DIV_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.ADD_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.SUB_EQ.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.SEMICOLON.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'void', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.CHAR.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.INT.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.FLOAT.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.LEFT_CURLY.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.RIGHT_CURLY.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'struct', 'struct'],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.IF.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.ELSE.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, terminals.WHILE.value, None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'do', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'for', None],
    [nt.STRUCT_OR_UNION_SPECIFIER.value, 'return', None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.IDENTIFIER.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.LEFT_PAREN.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.EQUALS.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.MUL_EQ.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.DIV_EQ.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.ADD_EQ.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.SUB_EQ.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.SEMICOLON.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, 'void', nt.STRUCT_DECLARATION.value],
    [nt.STRUCT_DECLARATION_LIST.value, 'void', [nt.STRUCT_DECLARATION_LIST.value, nt.STRUCT_DECLARATION.value]],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.CHAR.value, nt.STRUCT_DECLARATION.value],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.CHAR.value, [nt.STRUCT_DECLARATION_LIST.value, nt.STRUCT_DECLARATION.value]],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.INT.value, [nt.STRUCT_DECLARATION.value]],
    #[nt.Struct_declaration_list, terminals.INT.value, [nt.Struct_declaration_list, nt.Struct_declaration]],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.FLOAT.value, nt.STRUCT_DECLARATION.value],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.FLOAT.value, [nt.STRUCT_DECLARATION_LIST.value, nt.STRUCT_DECLARATION.value]],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.RIGHT_CURLY.value, [nt.STRUCT_DECLARATION.value]],
    [nt.STRUCT_DECLARATION_LIST.value, 'struct', nt.STRUCT_DECLARATION.value],
    [nt.STRUCT_DECLARATION_LIST.value, 'struct', [nt.STRUCT_DECLARATION_LIST.value, nt.STRUCT_DECLARATION.value]],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.IF.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.ELSE.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, terminals.WHILE.value, None],
    [nt.STRUCT_DECLARATION_LIST.value, 'return', None],
    [nt.STRUCT_DECLARATION.value, terminals.IDENTIFIER.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.LEFT_PAREN.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.RIGHT_PAREN.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.GREATER_THAN.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.EQUALS.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.MUL_EQ.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.DIV_EQ.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.ADD_EQ.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.SUB_EQ.value, None],
    [nt.STRUCT_DECLARATION.value, 'void', [nt.SPECIFIER_QUALIFIER_LIST.value, nt.STRUCT_DECLARATION_LIST.value, terminals.SEMICOLON.value]],
    [nt.STRUCT_DECLARATION.value, terminals.CHAR.value, [nt.SPECIFIER_QUALIFIER_LIST.value, nt.STRUCT_DECLARATION_LIST.value, terminals.SEMICOLON.value]],
    [nt.STRUCT_DECLARATION.value, terminals.INT.value, [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.SEMICOLON.value]],
    [nt.STRUCT_DECLARATION.value, terminals.FLOAT.value, [nt.SPECIFIER_QUALIFIER_LIST.value, nt.STRUCT_DECLARATION_LIST.value, terminals.SEMICOLON.value]],
    [nt.STRUCT_DECLARATION.value, terminals.LEFT_CURLY.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.RIGHT_CURLY.value, [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.SEMICOLON.value]],
    [nt.STRUCT_DECLARATION.value, 'struct', [nt.SPECIFIER_QUALIFIER_LIST.value, nt.STRUCT_DECLARATION_LIST.value, terminals.SEMICOLON.value]],
    [nt.STRUCT_DECLARATION.value, terminals.IF.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.ELSE.value, None],
    [nt.STRUCT_DECLARATION.value, terminals.WHILE.value, None],
    [nt.STRUCT_DECLARATION.value, 'do', None],
    [nt.STRUCT_DECLARATION.value, 'for', None],
    [nt.STRUCT_DECLARATION.value, 'return', None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.IDENTIFIER.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.LEFT_PAREN.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.EQUALS.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.MUL_EQ.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.DIV_EQ.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.ADD_EQ.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.SUB_EQ.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'void', [nt.TYPE_SPECIFIER.value, nt.SPECIFIER_QUALIFIER_LIST.value]],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'void', nt.TYPE_SPECIFIER.value],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.CHAR.value, [nt.TYPE_SPECIFIER.value, nt.SPECIFIER_QUALIFIER_LIST.value]],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.CHAR.value, nt.TYPE_SPECIFIER.value],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.INT.value, [nt.TYPE_SPECIFIER.value]],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.INT.value, [nt.TYPE_SPECIFIER.value, nt.SPECIFIER_QUALIFIER_LIST.value]],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.INT.value, nt.TYPE_SPECIFIER.value],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.FLOAT.value, [nt.TYPE_SPECIFIER.value, nt.SPECIFIER_QUALIFIER_LIST.value]],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.FLOAT.value, nt.TYPE_SPECIFIER.value],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'struct', [nt.TYPE_SPECIFIER.value, nt.SPECIFIER_QUALIFIER_LIST.value]],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'struct', nt.TYPE_SPECIFIER.value],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.IF.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.ELSE.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, terminals.WHILE.value, None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'do', None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'for', None],
    [nt.SPECIFIER_QUALIFIER_LIST.value, 'return', None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.IDENTIFIER.value, nt.STRUCT_DECLARATOR.value],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.IDENTIFIER.value, [nt.STRUCT_DECLARATOR_LIST.value, 'comma', nt.STRUCT_DECLARATOR.value]],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.LEFT_PAREN.value, nt.STRUCT_DECLARATOR.value],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.LEFT_PAREN.value, [nt.STRUCT_DECLARATOR_LIST.value, 'comma', nt.STRUCT_DECLARATOR.value]],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.EQUALS.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.MUL_EQ.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.DIV_EQ.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.ADD_EQ.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.SUB_EQ.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, 'void', None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.CHAR.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.INT.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.FLOAT.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, 'struct', None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.IF.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.ELSE.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, terminals.WHILE.value, None],
    [nt.STRUCT_DECLARATOR_LIST.value, 'do', None],
    [nt.STRUCT_DECLARATOR_LIST.value, 'for', None],
    [nt.STRUCT_DECLARATOR_LIST.value, 'return', None],
    [nt.STRUCT_DECLARATOR.value, terminals.IDENTIFIER.value, nt.DECLARATOR.value],
    [nt.STRUCT_DECLARATOR.value, terminals.LEFT_PAREN.value, nt.DECLARATOR.value],
    [nt.STRUCT_DECLARATOR.value, terminals.RIGHT_PAREN.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.GREATER_THAN.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.EQUALS.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.MUL_EQ.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.DIV_EQ.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.ADD_EQ.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.SUB_EQ.value, None],
    [nt.STRUCT_DECLARATOR.value, 'void', None],
    [nt.STRUCT_DECLARATOR.value, terminals.CHAR.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.INT.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.FLOAT.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.LEFT_CURLY.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.RIGHT_CURLY.value, None],
    [nt.STRUCT_DECLARATOR.value, 'struct', None],
    [nt.STRUCT_DECLARATOR.value, terminals.IF.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.ELSE.value, None],
    [nt.STRUCT_DECLARATOR.value, terminals.WHILE.value, None],
    [nt.STRUCT_DECLARATOR.value, 'do', None],
    [nt.STRUCT_DECLARATOR.value, 'for', None],
    [nt.STRUCT_DECLARATOR.value, 'return', None],
    [nt.TYPE_QUALIFIER.value, terminals.IDENTIFIER.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.LEFT_PAREN.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.RIGHT_PAREN.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.GREATER_THAN.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.EQUALS.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.MUL_EQ.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.DIV_EQ.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.ADD_EQ.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.SUB_EQ.value, None],
    [nt.TYPE_QUALIFIER.value, 'void', None],
    [nt.TYPE_QUALIFIER.value, terminals.CHAR.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.INT.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.FLOAT.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.LEFT_CURLY.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.RIGHT_CURLY.value, None],
    [nt.TYPE_QUALIFIER.value, 'struct', None],
    [nt.TYPE_QUALIFIER.value, terminals.IF.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.ELSE.value, None],
    [nt.TYPE_QUALIFIER.value, terminals.WHILE.value, None],
    [nt.TYPE_QUALIFIER.value, 'do', None],
    [nt.TYPE_QUALIFIER.value, 'for', None],
    [nt.TYPE_QUALIFIER.value, 'return', None],
    [nt.DECLARATOR.value, terminals.IDENTIFIER.value, [nt.DIRECT_DECLARATOR.value]],
    [nt.DECLARATOR.value, terminals.LEFT_PAREN.value, nt.DIRECT_DECLARATOR.value],
    [nt.DECLARATOR.value, terminals.RIGHT_PAREN.value, None],
    [nt.DECLARATOR.value, terminals.GREATER_THAN.value, None],
    [nt.DECLARATOR.value, terminals.EQUALS.value, None],
    [nt.DECLARATOR.value, terminals.MUL_EQ.value, None],
    [nt.DECLARATOR.value, terminals.DIV_EQ.value, None],
    [nt.DECLARATOR.value, terminals.ADD_EQ.value, None],
    [nt.DECLARATOR.value, terminals.SUB_EQ.value, None],
    [nt.DECLARATOR.value, 'void', None],
    [nt.DECLARATOR.value, terminals.CHAR.value, None],
    [nt.DECLARATOR.value, terminals.INT.value, [nt.DIRECT_DECLARATOR.value]],
    [nt.DECLARATOR.value, terminals.FLOAT.value, None],
    [nt.DECLARATOR.value, terminals.LEFT_CURLY.value, None],
    [nt.DECLARATOR.value, terminals.RIGHT_CURLY.value, None],
    [nt.DECLARATOR.value, 'struct', None],
    [nt.DECLARATOR.value, terminals.IF.value, [nt.DIRECT_DECLARATOR.value]],
    [nt.DECLARATOR.value, terminals.ELSE.value, None],
    [nt.DECLARATOR.value, terminals.WHILE.value, None],
    [nt.DECLARATOR.value, 'do', None],
    [nt.DECLARATOR.value, 'for', None],
    [nt.DECLARATOR.value, 'return', None],
    [nt.DIRECT_DECLARATOR.value, terminals.IDENTIFIER.value, [terminals.IDENTIFIER.value, terminals.LEFT_PAREN.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.IDENTIFIER.value, [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, nt.IDENTIFIER_LIST.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.IDENTIFIER.value, [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, [terminals.LEFT_PAREN.value, nt.DECLARATOR.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, nt.IDENTIFIER_LIST.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, [nt.DIRECT_DECLARATOR.value, terminals.LEFT_PAREN.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.GREATER_THAN.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.EQUALS.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.MUL_EQ.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.DIV_EQ.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.ADD_EQ.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.SUB_EQ.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.SEMICOLON.value, None],
    [nt.DIRECT_DECLARATOR.value, 'void', None],
    [nt.DIRECT_DECLARATOR.value, terminals.CHAR.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.INT.value, [nt.DIRECT_DECLARATOR.value, '(', ')']],
    [nt.DIRECT_DECLARATOR.value, terminals.FLOAT.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.LEFT_CURLY.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.RIGHT_CURLY.value, None],
    [nt.DIRECT_DECLARATOR.value, 'struct', None],
    [nt.DIRECT_DECLARATOR.value, terminals.IF.value, [terminals.IF.value,terminals.LEFT_PAREN.value, nt.INITIALIZER.value, terminals.RIGHT_PAREN.value]],
    [nt.DIRECT_DECLARATOR.value, terminals.ELSE.value, None],
    [nt.DIRECT_DECLARATOR.value, terminals.WHILE.value, None],
    [nt.DIRECT_DECLARATOR.value, 'do', None],
    [nt.DIRECT_DECLARATOR.value, 'for', None],
    [nt.DIRECT_DECLARATOR.value, 'return', None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.IDENTIFIER.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.LEFT_PAREN.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.EQUALS.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.MUL_EQ.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.DIV_EQ.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.ADD_EQ.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.SUB_EQ.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.SEMICOLON.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, 'void', None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.CHAR.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.INT.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.FLOAT.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, 'struct', None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.IF.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.ELSE.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, terminals.WHILE.value, None],
    [nt.TYPE_QUALIFIER_LIST.value, 'do', None],
    [nt.TYPE_QUALIFIER_LIST.value, 'for', None],
    [nt.TYPE_QUALIFIER_LIST.value, 'return', None],
    [nt.IDENTIFIER_LIST.value, terminals.IDENTIFIER.value, terminals.IDENTIFIER.value],
    [nt.IDENTIFIER_LIST.value, terminals.IDENTIFIER.value, [nt.IDENTIFIER_LIST.value, 'comma', terminals.IDENTIFIER.value]],
    [nt.IDENTIFIER_LIST.value, terminals.LEFT_PAREN.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.GREATER_THAN.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.EQUALS.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.MUL_EQ.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.DIV_EQ.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.ADD_EQ.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.SUB_EQ.value, None],
    [nt.IDENTIFIER_LIST.value, 'void', None],
    [nt.IDENTIFIER_LIST.value, terminals.CHAR.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.INT.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.FLOAT.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.IDENTIFIER_LIST.value, 'struct', None],
    [nt.IDENTIFIER_LIST.value, terminals.IF.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.ELSE.value, None],
    [nt.IDENTIFIER_LIST.value, terminals.WHILE.value, None],
    [nt.IDENTIFIER_LIST.value, 'do', None],
    [nt.IDENTIFIER_LIST.value, 'for', None],
    [nt.IDENTIFIER_LIST.value, 'return', None],
    [nt.INITIALIZER.value, terminals.IDENTIFIER.value, nt.ASSIGNMENT_EXPRESSION.value],
    [nt.INITIALIZER.value, 'number', ['number', terminals.GREATER_THAN.value, 'number']],
    [nt.INITIALIZER.value, 'number', ['number']],
    [nt.INITIALIZER.value, terminals.LEFT_PAREN.value, nt.ASSIGNMENT_EXPRESSION.value],
    [nt.INITIALIZER.value, terminals.RIGHT_PAREN.value, None],
    [nt.INITIALIZER.value, terminals.GREATER_THAN.value, None],
    [nt.INITIALIZER.value, terminals.LEFT_CURLY.value, [terminals.LEFT_CURLY.value, nt.INITIALIZER.value, terminals.RIGHT_CURLY.value]],
    [nt.INITIALIZER.value, terminals.LEFT_CURLY.value, [terminals.LEFT_CURLY.value, nt.INITIALIZER_LIST.value, 'comma', terminals.RIGHT_CURLY.value]],
    [nt.INITIALIZER.value, terminals.IF.value, [nt.ASSIGNMENT_EXPRESSION.value]],
    [nt.INITIALIZER_LIST.value, terminals.IDENTIFIER.value, nt.INITIALIZER.value],
    [nt.INITIALIZER_LIST.value, terminals.IDENTIFIER.value, [nt.INITIALIZER_LIST.value, 'comma', nt.INITIALIZER.value]],
    [nt.INITIALIZER_LIST.value, terminals.LEFT_PAREN.value, nt.INITIALIZER.value],
    [nt.INITIALIZER_LIST.value, terminals.LEFT_PAREN.value, [nt.INITIALIZER_LIST.value, 'comma', nt.INITIALIZER.value]],
    [nt.INITIALIZER_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.INITIALIZER_LIST.value, 'comma', None],
    [nt.INITIALIZER_LIST.value, 'plus', nt.INITIALIZER.value],
    [nt.INITIALIZER_LIST.value, 'plus', [nt.INITIALIZER_LIST.value, 'comma', nt.INITIALIZER.value]],
    [nt.INITIALIZER_LIST.value, 'minus', nt.INITIALIZER.value],
    [nt.INITIALIZER_LIST.value, 'minus', [nt.INITIALIZER_LIST.value, 'comma', nt.INITIALIZER.value]],
    [nt.INITIALIZER_LIST.value, 'not', nt.INITIALIZER.value],
    [nt.INITIALIZER_LIST.value, 'not', [nt.INITIALIZER_LIST.value, 'comma', nt.INITIALIZER.value]],
    [nt.INITIALIZER_LIST.value, terminals.LEFT_CURLY.value, nt.INITIALIZER.value],
    [nt.INITIALIZER_LIST.value, terminals.LEFT_CURLY.value, [nt.INITIALIZER_LIST.value, 'comma', nt.INITIALIZER.value]],
    [nt.INITIALIZER_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.INITIALIZER_LIST.value, 'struct', None],
    [nt.INITIALIZER_LIST.value, 'enum', None],
    [nt.INITIALIZER_LIST.value, terminals.IF.value, None],
    [nt.INITIALIZER_LIST.value, terminals.ELSE.value, None],
    [nt.INITIALIZER_LIST.value, terminals.WHILE.value, None],
    [nt.INITIALIZER_LIST.value, 'do', None],
    [nt.INITIALIZER_LIST.value, 'for', None],
    [nt.INITIALIZER_LIST.value, 'return', None],
    [nt.STATEMENT.value, terminals.IDENTIFIER.value, nt.LABELED_STATEMENT.value],
    [nt.STATEMENT.value, terminals.IDENTIFIER.value, nt.EXPRESSION_STATEMENT.value],
    [nt.STATEMENT.value, terminals.LEFT_PAREN.value, nt.EXPRESSION_STATEMENT.value],
    [nt.STATEMENT.value, terminals.RIGHT_PAREN.value, None],
    [nt.STATEMENT.value, 'comma', None],
    [nt.STATEMENT.value, 'plus', nt.EXPRESSION_STATEMENT.value],
    [nt.STATEMENT.value, 'minus', nt.EXPRESSION_STATEMENT.value],
    [nt.STATEMENT.value, 'not', nt.EXPRESSION_STATEMENT.value],
    [nt.STATEMENT.value, terminals.SEMICOLON.value, nt.EXPRESSION_STATEMENT.value],
    [nt.STATEMENT.value, 'void', None],
    [nt.STATEMENT.value, terminals.CHAR.value, None],
    [nt.STATEMENT.value, terminals.INT.value, None],
    [nt.STATEMENT.value, terminals.FLOAT.value, None],
    [nt.STATEMENT.value, terminals.LEFT_CURLY.value, [nt.COMPOUND_STATEMENT.value]],
    [nt.STATEMENT.value, terminals.RIGHT_CURLY.value, None],
    [nt.STATEMENT.value, 'struct', None],
    [nt.STATEMENT.value, 'enum', None],
    [nt.STATEMENT.value, terminals.IF.value, [nt.SELECTION_STATEMENT.value]],
    [nt.STATEMENT.value, terminals.ELSE.value, None],
    [nt.STATEMENT.value, terminals.WHILE.value, [nt.ITERATION_STATEMENT.value]],
    [nt.STATEMENT.value, 'do', nt.ITERATION_STATEMENT.value],
    [nt.STATEMENT.value, 'for', nt.ITERATION_STATEMENT.value],
    [nt.COMPOUND_STATEMENT.value, terminals.EQUALS.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.MUL_EQ.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.DIV_EQ.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.ADD_EQ.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.SUB_EQ.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.SEMICOLON.value, None],
    [nt.COMPOUND_STATEMENT.value, 'void', None],
    [nt.COMPOUND_STATEMENT.value, terminals.CHAR.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.INT.value, None],
    [nt.COMPOUND_STATEMENT.value, terminals.FLOAT.value, None],
    #[nt.Compound_statement, tokens.LEFT_CURLY.value, [tokens.LEFT_CURLY.value, tokens.RIGHT_CURLY.value]],
    #[nt.Compound_statement, tokens.LEFT_CURLY.value, [tokens.LEFT_CURLY.value, nt.Statement_list, tokens.RIGHT_CURLY.value]],
    [nt.COMPOUND_STATEMENT.value, terminals.LEFT_CURLY.value, [terminals.LEFT_CURLY.value, nt.BLOCK_ITEM_LIST.value, terminals.RIGHT_CURLY.value]],
    #[nt.Compound_statement, tokens.LEFT_CURLY.value, [tokens.LEFT_CURLY.value, nt.Declaration_list, nt.Statement_list, tokens.RIGHT_CURLY.value]],
    [nt.DECLARATION_LIST.value, terminals.EQUALS.value, None],
    [nt.DECLARATION_LIST.value, terminals.MUL_EQ.value, None],
    [nt.DECLARATION_LIST.value, terminals.DIV_EQ.value, None],
    [nt.DECLARATION_LIST.value, terminals.ADD_EQ.value, None],
    [nt.DECLARATION_LIST.value, terminals.SUB_EQ.value, None],
    [nt.DECLARATION_LIST.value, terminals.SEMICOLON.value, None],
    [nt.DECLARATION_LIST.value, 'void', nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, 'void', [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, 'void', nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, 'void', [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.CHAR.value, nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, terminals.CHAR.value, [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.CHAR.value, nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, terminals.CHAR.value, [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.INT.value, nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, terminals.INT.value, [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.INT.value, nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, terminals.INT.value, [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.FLOAT.value, nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, terminals.FLOAT.value, [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.FLOAT.value, nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, terminals.FLOAT.value, [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, terminals.LEFT_CURLY.value, None],
    [nt.DECLARATION_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.DECLARATION_LIST.value, 'struct', nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, 'struct', [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, 'struct', nt.DECLARATION.value],
    [nt.DECLARATION_LIST.value, 'struct', [nt.DECLARATION_LIST.value, nt.DECLARATION.value]],
    [nt.DECLARATION_LIST.value, 'enum', None],
    [nt.DECLARATION_LIST.value, terminals.IF.value, None],
    [nt.DECLARATION_LIST.value, terminals.ELSE.value, None],
    [nt.DECLARATION_LIST.value, terminals.WHILE.value, None],
    [nt.DECLARATION_LIST.value, 'do', None],
    [nt.DECLARATION_LIST.value, 'for', None],
    [nt.DECLARATION_LIST.value, 'return', None],
    [nt.STATEMENT_LIST.value, terminals.IDENTIFIER.value, nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, terminals.IDENTIFIER.value, [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, terminals.LEFT_PAREN.value, None],
    [nt.STATEMENT_LIST.value, terminals.LEFT_PAREN.value, [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, terminals.RIGHT_PAREN.value, None],
    [nt.STATEMENT_LIST.value, 'comma', None],
    [nt.STATEMENT_LIST.value, 'plus', nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, 'plus', [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, 'minus', nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, 'minus', [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, 'not', nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, 'not', [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, terminals.SEMICOLON.value, nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, terminals.SEMICOLON.value, [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, 'void', None],
    [nt.STATEMENT_LIST.value, terminals.CHAR.value, None],
    [nt.STATEMENT_LIST.value, terminals.INT.value, None],
    [nt.STATEMENT_LIST.value, terminals.FLOAT.value, None],
    [nt.STATEMENT_LIST.value, terminals.LEFT_CURLY.value, nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, terminals.LEFT_CURLY.value, [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, terminals.RIGHT_CURLY.value, None],
    [nt.STATEMENT_LIST.value, 'struct', None],
    [nt.STATEMENT_LIST.value, 'enum', None],
    [nt.STATEMENT_LIST.value, terminals.IF.value, nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, terminals.IF.value, [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, terminals.ELSE.value, nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, terminals.WHILE.value, nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, terminals.WHILE.value, [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, 'do', nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, 'do', [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, 'for', nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, 'for', [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.STATEMENT_LIST.value, 'return', nt.STATEMENT.value],
    [nt.STATEMENT_LIST.value, 'return', [nt.STATEMENT_LIST.value, nt.STATEMENT.value]],
    [nt.EXPRESSION_STATEMENT.value, terminals.IDENTIFIER.value, [nt.EXPRESSION.value, terminals.SEMICOLON.value]],
    [nt.EXPRESSION_STATEMENT.value, terminals.LEFT_PAREN.value, [nt.EXPRESSION.value, terminals.SEMICOLON.value]],
    [nt.EXPRESSION_STATEMENT.value, terminals.RIGHT_PAREN.value, None],
    [nt.EXPRESSION_STATEMENT.value, 'comma', None],
    [nt.EXPRESSION_STATEMENT.value, 'plus', [nt.EXPRESSION.value, terminals.SEMICOLON.value]],
    [nt.EXPRESSION_STATEMENT.value, 'minus', [nt.EXPRESSION.value, terminals.SEMICOLON.value]],
    [nt.EXPRESSION_STATEMENT.value, 'not', [nt.EXPRESSION.value, terminals.SEMICOLON.value]],
    [nt.EXPRESSION_STATEMENT.value, terminals.SEMICOLON.value, [nt.EXPRESSION.value, terminals.SEMICOLON.value]],
    [nt.SELECTION_STATEMENT.value, 'enum', None],
    [nt.SELECTION_STATEMENT.value, terminals.IF.value, [terminals.IF.value, terminals.LEFT_PAREN.value, nt.EXPRESSION.value, terminals.RIGHT_PAREN.value, nt.STATEMENT.value, terminals.ELSE.value, nt.STATEMENT.value]],
    [nt.SELECTION_STATEMENT.value, terminals.ELSE.value, None],
    [nt.ITERATION_STATEMENT.value, terminals.WHILE.value, [terminals.WHILE.value, terminals.LEFT_PAREN.value, nt.EXPRESSION.value, terminals.RIGHT_PAREN.value, nt.STATEMENT.value]],
    [nt.ITERATION_STATEMENT.value, 'do', ['do', nt.STATEMENT.value, terminals.WHILE.value, terminals.LEFT_PAREN.value, nt.EXPRESSION.value, terminals.RIGHT_PAREN.value, terminals.SEMICOLON.value]],
    [nt.ITERATION_STATEMENT.value, 'for', ['for', terminals.LEFT_PAREN.value, nt.EXPRESSION_STATEMENT.value, nt.EXPRESSION_STATEMENT.value, terminals.RIGHT_PAREN.value, nt.STATEMENT.value]],
    [nt.ITERATION_STATEMENT.value, 'for', ['for', terminals.LEFT_PAREN.value, nt.EXPRESSION_STATEMENT.value, nt.EXPRESSION_STATEMENT.value, nt.EXPRESSION.value, terminals.RIGHT_PAREN.value, nt.STATEMENT.value]],
    [nt.EXTERNAL_DECLARATION.value, 'void', nt.FUNCTION_DEFINITION.value],
    [nt.EXTERNAL_DECLARATION.value, 'void', nt.DECLARATION.value],
    [nt.EXTERNAL_DECLARATION.value, terminals.CHAR.value, nt.FUNCTION_DEFINITION.value],
    # [nt.External_declaration, terminals.CHAR.value, [nt.Declaration]],
    #[nt.External_declaration, terminals.INT.value, nt.Function_definition],
    [nt.EXTERNAL_DECLARATION.value, terminals.INT.value, [nt.FUNCTION_DEFINITION.value]],
    # [nt.External_declaration, terminals.FLOAT.value, nt.Function_definition],
    [nt.EXTERNAL_DECLARATION.value, terminals.FLOAT.value, [nt.FUNCTION_DEFINITION.value]],
    [nt.EXTERNAL_DECLARATION.value, terminals.LEFT_CURLY.value, None],
    [nt.EXTERNAL_DECLARATION.value, terminals.RIGHT_CURLY.value, None],
    [nt.EXTERNAL_DECLARATION.value, 'struct', nt.FUNCTION_DEFINITION.value],
    [nt.EXTERNAL_DECLARATION.value, 'struct', nt.DECLARATION.value],
    [nt.EXTERNAL_DECLARATION.value, 'enum', None],
    [nt.EXTERNAL_DECLARATION.value, terminals.IF.value, [nt.INIT_DECLARATOR_LIST.value, terminals.SEMICOLON.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.SEMICOLON.value, None],
    [nt.FUNCTION_DEFINITION.value, 'void', [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.DECLARATION_LIST.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, 'void', [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.CHAR.value, [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.DECLARATION_LIST.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.CHAR.value, [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.INT.value, [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.FLOAT.value, [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.DECLARATION_LIST.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.FLOAT.value, [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, terminals.LEFT_CURLY.value, None],
    [nt.FUNCTION_DEFINITION.value, terminals.RIGHT_CURLY.value, None],
    [nt.FUNCTION_DEFINITION.value, 'struct', [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.DECLARATION_LIST.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, 'struct', [nt.DECLARATION_SPECIFIERS.value, nt.DECLARATOR.value, nt.COMPOUND_STATEMENT.value]],
    [nt.FUNCTION_DEFINITION.value, 'enum', None],
    [nt.BLOCK_ITEM_LIST.value, terminals.INT.value, [nt.BLOCK_ITEM_LIST.value, nt.BLOCK_ITEM.value]],
    [nt.BLOCK_ITEM.value, terminals.IF.value, [nt.STATEMENT.value]],
    [nt.BLOCK_ITEM.value, terminals.INT.value, [nt.DECLARATION.value]],
    [nt.BLOCK_ITEM.value, 'struct', [nt.DECLARATION.value]],
    [nt.BLOCK_ITEM.value, terminals.IDENTIFIER.value, [nt.STATEMENT.value]],
    [nt.BLOCK_ITEM.value, terminals.WHILE.value, [nt.STATEMENT.value]],
    [nt.BLOCK_ITEM.value, 'comment', ['comment']],
    [nt.BLOCK_ITEM.value, terminals.CHAR.value, [nt.DECLARATION.value]],
    [nt.BLOCK_ITEM.value, terminals.FLOAT.value, [nt.DECLARATION.value]],
]